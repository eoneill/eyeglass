"use strict";

var packageUtils = require("./util/package");
var ImportUtilities = require("./import_utils");
var EyeglassModule = require("./util/eyeglass_module");

// import pattern matches `assets` and `foo/assets`, but not `foo/bar/assets`
var rAssetsImport = /^(?:([^\/]+)\/)?assets$/;

function AssetImporter(eyeglass, sass, options, fallbackImporter) {

  return function(uri, prev, done) {
    var importUtils = new ImportUtilities(eyeglass, sass, options, fallbackImporter, this);

    var isRealFile = importUtils.existsSync(prev);

    function importAssetsFor(mod) {
      var name = (mod && mod.name);
      var assets = (mod && mod.assets) || eyeglass.assets;

      importUtils.importOnce({
        contents: assets.asAssetImport(name),
        file: "autoGenerated:" + (name ? name + "/" : "") + "assets"
      }, done);
    }

    var match = rAssetsImport.exec(uri);
    // the first fragment of the match is the module name
    var moduleName = match && match[1];

    // if it doesn't match the pattern, just use the fallback importer
    if (!match || moduleName === "." || moduleName === ".." || moduleName === "eyeglass") {
      importUtils.fallback(uri, prev, done, function() {
        done(sass.NULL);
      });
    } else {
      // if the module name wasn't specified in the import,
      //  infer it from the origin
      if (!moduleName && isRealFile) {
        var pkg = packageUtils.findNearestPackage(prev);
        if (pkg !== options.eyeglass.root) {
          moduleName = (new EyeglassModule({
            path: pkg
          })).name;
        }
      }

      // if we have a module name...
      if (moduleName) {
        // find the module
        var mod = eyeglass.modules.access(moduleName, isRealFile ? prev : options.eyeglass.root);
        // if we found it...
        if (mod) {
          /* eslint max-depth:0 */
          // if it has assets...
          if (mod.assets) {
            // import them
            importAssetsFor(mod);
          } else {
            // otherwise throw an error
            done(new Error("No assets specified for eyeglass plugin " + mod.name));
          }
        } else {
          // if we didn't find it, throw an error
          done(new Error("No eyeglass plugin named: " + moduleName));
        }
      } else {
        // otherwise, import the app assets
        importAssetsFor();
      }
    }
  };
}

module.exports = AssetImporter;
